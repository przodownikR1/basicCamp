buildscript {
	ext {
		springBootVersion = '1.5.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")

	}

}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'

apply plugin: 'groovy'

jar {
	baseName = 'bootBasic'
	version = '0.1.0-SNAPSHOT'
}

repositories {
     mavenCentral()
     jcenter()
	
}


ext {
     springDataVersion = 'Fowler-RELEASE'
     springVersion = '4.2.2.RELEASE'
     hibernateVersion = "5.0.2.Final"
     javaxValidationVersion = "1.1.0.Final"
     hibernateValidatorVersion = "5.0.3.Final"
     lombokVersion = "1.16.4"
     
     cucumberVersion = "1.2.2"
     apacheHttpVersion = "4.5"
     gatlingVersion = "2.1.4"
     
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

sourceSets {
    intTest
    main {
        java { srcDir 'src/main/java' }
        groovy { srcDir 'src/main/groovy' }
        resources { srcDir 'src/main/resources' }
    }
    test {
        java { srcDir 'src/test/java' }
        groovy { srcDir 'src/test/groovy' }
        resources { srcDir 'src/test/resources' }
    }
}



dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.data:spring-data-rest-hal-browser')
	compile('org.springframework.boot:spring-boot-starter-hateoas')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile 'org.springframework.boot:spring-boot-starter-aop'
	runtime('org.springframework.boot:spring-boot-devtools')
        compile('org.springframework.boot:spring-boot-starter-data-jpa')
		compile('org.springframework.boot:spring-boot-starter-data-rest')
		compile('org.springframework.data:spring-data-rest-hal-browser')
		compile('org.springframework.boot:spring-boot-starter-logging')
		compile group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '4.8'
	compile 'org.springframework.boot:spring-boot-configuration-processor'
	compile 'org.projectlombok:lombok'
	compile 'com.google.guava:guava:20.+'
    
    	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.5.0'
		compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.5.0'

    
  
    
    compile 'com.h2database:h2'
    compile 'com.google.guava:guava:20.+'
    
    compile 'org.codehaus.groovy:groovy-all:2.4.5'
    compile 'com.fasterxml.jackson.core:jackson-databind'
   
    testCompile 'org.mockito:mockito-all:1.10.19'
    compile 'org.apache.httpcomponents:httpclient:4.5'
    compile 'org.apache.httpcomponents:fluent-hc:4.5'
  
  
	compile group: 'io.javaslang', name: 'javaslang', version: '2.0.5'
	compile group: 'io.javaslang', name: 'javaslang-match', version: '2.0.5'
	compile group: 'io.reactivex', name: 'rxjava', version: '1.2.3'

	compile ("com.github.javafaker:javafaker:0.12")
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
	testCompile 'org.awaitility:awaitility:2.0.0'
    // https://mvnrepository.com/artifact/cglib/cglib-nodep
    compile group: 'cglib', name: 'cglib-nodep', version: '3.2.4'
       // allows mocking of classes (in addition to interfaces)
  // https://mvnrepository.com/artifact/org.objenesis/objenesis
      compile group: 'org.objenesis', name: 'objenesis', version: '2.5.1'
    // allows mocking of classes without default constructor (together with CGLIB)
  
    
    compile group: 'org.spockframework', name: 'spock-core', version: '1.1-groovy-2.4-rc-2'
    
	bootRun {
		if (System.properties.containsKey('spring.profiles.active')) {
			systemProperty "spring.profiles.active", System.properties['spring.profiles.active']
		}

		def stdOpts = ['-Dfile.encoding=UTF8', '-Xms128m', '-Xmx256m' ,'-XX:+UseG1GC']
		def gcOpts = ['-verbose:gc','-XX:+PrintGCDetails', '-XX:+PrintHeapAtGC',
					'-XX:+PrintGCDateStamps', '-XX:+PrintTenuringDistribution',
					'-XX:+PrintClassHistogram', '-Xloggc:gc.log']

		jvmArgs = stdOpts + gcOpts

		if ( project.hasProperty('jvmArgs') ) {
			jvmArgs project.jvmArgs.split('\\s+')
		}
	}
    
}
